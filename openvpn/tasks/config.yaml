---
# Workaround for strange handler variable visibility
- name: Get actual values of some variables
  set_fact:
    no_service: "{{ data.no_service | default(_ovpn_config.common.no_service) }}"
    name: "{{ data.name }}"
    config_path: "{{ data.config_path | default(_ovpn_config.common.config_path) }}"
    owner: "{{ data.owner | default(_ovpn_config.common.owner) }}"
    group: "{{ data.group | default(_ovpn_config.common.group) }}"
    proto: "{{ data.proto | default(_ovpn_config.common.proto) }}"
    device_type: "{{ data.device.type | default(_ovpn_config.common.device.type) }}"
    host:  "{{ data.host }}"
    port:  "{{ data.port }}"
    cipher: "{{ data.cipher | default(_ovpn_config.common.cipher) }}"

- name: Saving config name for handler
  set_fact:
    openvpn_service_name: "{{ name }}"
    openvpn_no_service: "{{ no_service }}"

- name: "{{ name }}. Reading keys and certificates"
  set_fact:
    config_key: "{{ lookup('file', _ovpn_config.manager.pki_folder + '/pki/private/' + name + '.key' ) }}"
    config_crt: "{{ lookup('file', _ovpn_config.manager.pki_folder + '/pki/issued/' + name + '.crt' ) }}"
    ca_crt: "{{ lookup('file', _ovpn_config.manager.pki_folder + '/pki/ca.crt') }}"
    dh: "{{ lookup('file', _ovpn_config.manager.pki_folder + '/pki/dh.pem') }}"

- name: "{{ name }}. Reading ta_key"
  set_fact:
    ta_key: "{{ lookup('file', _ovpn_config.manager.pki_folder + '/ta.key') }}"
  when: _ovpn_config.common.tls_auth

- debug:
    msg: "Config type is: {{ type }}"

- name: "{{ name }}. Creating openvpn config"
  template:
    src: "{{ type }}_config.conf.j2"
    dest: "{{ config_path }}/{{ name }}.conf"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: 0600
  notify: restart openvpn

- name: "{{ name }}. Creating up script files"
  copy:
    dest: "{{ config_path }}/{{ name }}-up.sh"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: 0700
    content: "{{ data.up_script }}"
  when: data.up_script is defined
  notify: restart openvpn

- name: "{{ name }}. Creating down script files"
  copy:
    dest: "{{ config_path }}/{{ name }}-down.sh"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: 0700
    content: "{{ data.down_script }}"
  when: data.down_script is defined
  notify: restart openvpn

- name: "{{ name }}. Creating client-config directory for server config"
  block:
    - name: Creating folder
      file:
        path: "{{ config_path }}/{{ name }}-ccd"
        state: directory
        owner: "{{ owner }}"
        group: "{{ group }}"
        mode: 0700

    - name: Creating client configs
      template:
        src: "ccd.j2"
        dest: "{{ config_path }}/{{ name }}-ccd/{{ client.name }}"
        owner: "{{ owner }}"
        group: "{{ group }}"
        mode: 0600
      with_items: "{{ data.clients }}"
      loop_control:
        loop_var: client
      notify: restart openvpn
  when: type == "server" and data.clients is defined

- name: "{{ name }}. Allow OpenVPN to listen on"
  seport:
    ports: "{{ data.se_port }}"
    proto: "{{ data.se_proto }}"
    setype: openvpn_port_t
    state: present
  when: data.se_port is defined and data.se_proto is defined
  notify:
    - restart openvpn

- meta: flush_handlers

- name: "{{ name }}. Start OpenVPN"
  systemd:
    name: "openvpn@{{ name }}"
    state: started
  when: not no_service

- name: "{{ name }}. Enabling OpenVPN connection"
  systemd:
    name: "openvpn@{{ name }}"
    enabled: yes
  when: not no_service
